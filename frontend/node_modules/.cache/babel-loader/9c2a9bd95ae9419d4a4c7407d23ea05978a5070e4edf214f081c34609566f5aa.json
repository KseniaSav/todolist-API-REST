{"ast":null,"code":"var _jsxFileName = \"/Users/kseniasavelyeva/Documents/Programming/Java/ChatGPT Projects/ToDoList_REST/frontend/src/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getTasks, deleteTask, updateTask } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    loadTasks();\n  }, []);\n  const loadTasks = async () => {\n    const data = await getTasks();\n    setTasks(data);\n  };\n  const handleDelete = async taskId => {\n    await deleteTask(taskId);\n    loadTasks();\n  };\n  const handleToggleComplete = async (taskId, completed) => {\n    await updateTask(taskId, !completed);\n    loadTasks();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Liste des T\\xE2ches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            textDecoration: task.completed ? \"line-through\" : \"none\"\n          },\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleToggleComplete(task.id, task.completed),\n          children: task.completed ? \"Annuler\" : \"Terminer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(task.id),\n          children: \"Supprimer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","getTasks","deleteTask","updateTask","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","loadTasks","data","handleDelete","taskId","handleToggleComplete","completed","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","style","textDecoration","name","onClick","id","_c","$RefreshReg$"],"sources":["/Users/kseniasavelyeva/Documents/Programming/Java/ChatGPT Projects/ToDoList_REST/frontend/src/TaskList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getTasks, deleteTask, updateTask } from \"./api\";\n\nconst TaskList = () => {\n    const [tasks, setTasks] = useState([]);\n\n    useEffect(() => {\n        loadTasks();\n    }, []);\n\n    const loadTasks = async () => {\n        const data = await getTasks();\n        setTasks(data);\n    };\n\n    const handleDelete = async (taskId) => {\n        await deleteTask(taskId);\n        loadTasks();\n    };\n\n    const handleToggleComplete = async (taskId, completed) => {\n        await updateTask(taskId, !completed);\n        loadTasks();\n    };\n\n    return (\n        <div>\n            <h2>Liste des TÃ¢ches</h2>\n            <ul>\n                {tasks.map(task => (\n                    <li key={task.id}>\n                        <span style={{ textDecoration: task.completed ? \"line-through\" : \"none\" }}>\n                            {task.name}\n                        </span>\n                        <button onClick={() => handleToggleComplete(task.id, task.completed)}>\n                            {task.completed ? \"Annuler\" : \"Terminer\"}\n                        </button>\n                        <button onClick={() => handleDelete(task.id)}>Supprimer</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZW,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAAC,CAAC;IAC7BQ,QAAQ,CAACE,IAAI,CAAC;EAClB,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,MAAM,IAAK;IACnC,MAAMX,UAAU,CAACW,MAAM,CAAC;IACxBH,SAAS,CAAC,CAAC;EACf,CAAC;EAED,MAAMI,oBAAoB,GAAG,MAAAA,CAAOD,MAAM,EAAEE,SAAS,KAAK;IACtD,MAAMZ,UAAU,CAACU,MAAM,EAAE,CAACE,SAAS,CAAC;IACpCL,SAAS,CAAC,CAAC;EACf,CAAC;EAED,oBACIL,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBf,OAAA;MAAAW,QAAA,EACKR,KAAK,CAACa,GAAG,CAACC,IAAI,iBACXjB,OAAA;QAAAW,QAAA,gBACIX,OAAA;UAAMkB,KAAK,EAAE;YAAEC,cAAc,EAAEF,IAAI,CAACP,SAAS,GAAG,cAAc,GAAG;UAAO,CAAE;UAAAC,QAAA,EACrEM,IAAI,CAACG;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eACPf,OAAA;UAAQqB,OAAO,EAAEA,CAAA,KAAMZ,oBAAoB,CAACQ,IAAI,CAACK,EAAE,EAAEL,IAAI,CAACP,SAAS,CAAE;UAAAC,QAAA,EAChEM,IAAI,CAACP,SAAS,GAAG,SAAS,GAAG;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACTf,OAAA;UAAQqB,OAAO,EAAEA,CAAA,KAAMd,YAAY,CAACU,IAAI,CAACK,EAAE,CAAE;UAAAX,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAP3DE,IAAI,CAACK,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACb,EAAA,CAxCID,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}